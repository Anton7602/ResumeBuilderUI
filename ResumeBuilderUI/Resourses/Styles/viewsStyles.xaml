<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
                    xmlns:v="clr-namespace:System;assembly=netstandard" 
                    xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks" 
                    xmlns:views="clr-namespace:ResumeBuilderUI.Views">
    
    <!--Main Application Colors-->
    <SolidColorBrush x:Key="PrimaryColorBrush" Color="#EEEEEE"/>
    <SolidColorBrush x:Key="SecondaryColorBrush" Color="#FF1F90FF"/>
    <SolidColorBrush x:Key="PrimaryTextColor" Color="#000000"/>
    <SolidColorBrush x:Key="HoveringOverColorBrush" Color="#ebecf0"/>
    <SolidColorBrush x:Key="PositiveActionColorBrush" Color="#008000"/>
    <SolidColorBrush x:Key="NegativeActionColorBrush" Color="#800000"/>


    <!--             -->
    <!--Shared Styles-->
    <!--             -->
    
    <!--Add New Element Button Style-->
    <Style x:Key="AddNewElementButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{StaticResource PrimaryColorBrush}"/>
        <Setter Property="Foreground" Value="{StaticResource PositiveActionColorBrush}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border CornerRadius="10 0 10 0" Background="{TemplateBinding Background}" BorderBrush="{StaticResource PositiveActionColorBrush}"
                            BorderThickness="1">
                        <ContentPresenter HorizontalAlignment="Left" VerticalAlignment="Center" Margin="20 20"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource HoveringOverColorBrush}"/>
                <Setter Property="Cursor" Value="Hand"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{StaticResource SecondaryColorBrush}"/>
                <Setter Property="Foreground" Value="White"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--Generic list elements style-->
    <Style x:Key="ListElementsStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{StaticResource PrimaryTextColor}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border CornerRadius="10" Background="{TemplateBinding Background}" BorderBrush="{StaticResource SecondaryColorBrush}"
                            BorderThickness="1">
                        <ContentPresenter HorizontalAlignment="Left" VerticalAlignment="Center" Margin="13,8"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource HoveringOverColorBrush}"/>
                <Setter Property="Cursor" Value="Hand"/>
            </Trigger>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Background" Value="{StaticResource SecondaryColorBrush}"/>
                <Setter Property="Foreground" Value="White"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--Generic edited listelement style-->
    <Style x:Key="EditedListElementsStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{StaticResource PrimaryTextColor}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border CornerRadius="10" Background="{TemplateBinding Background}" BorderBrush="{StaticResource SecondaryColorBrush}"
                            BorderThickness="1">
                        <ContentPresenter HorizontalAlignment="Left" VerticalAlignment="Center" Margin="13,8"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <!--                -->
    <!--MainWindowStyles-->
    <!--                -->
    
    <!--NavBar listBox Style-->
    <Style x:Key="NavigationListBoxStyle" TargetType="{x:Type ListBox}">
        <Setter Property="Background" Value="{StaticResource PrimaryColorBrush}"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Disabled"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="Width" Value="Auto"/>
        <Setter Property="IsEnabled" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBox}">
                    <Border Background="{TemplateBinding Background}"
                        BorderThickness="0"
                        Padding="0"
                        SnapsToDevicePixels="true">
                        <ScrollViewer Padding="{TemplateBinding Padding}"
                                    Focusable="false">
                            <ItemsPresenter SnapsToDevicePixels=
                                    "{TemplateBinding SnapsToDevicePixels}"/>
                        </ScrollViewer>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <DataTrigger Binding="{Binding ElementName=SettingToggleButton, Path=IsChecked}"
                         Value="True">
                <Setter Property="SelectedIndex" Value="-1"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <!--NavBar Item Container Style-->
    <Style x:Key="NavigationListBoxItemStyle" TargetType="{x:Type ListBoxItem}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{StaticResource SecondaryColorBrush}"/>
        <Setter Property="Margin" Value="-1"/>
        <Setter Property="HorizontalContentAlignment" 
            Value="{Binding HorizontalContentAlignment, 
            RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="VerticalContentAlignment" 
            Value="{Binding VerticalContentAlignment, 
            RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Border x:Name="Bd"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}" 
                        Background="{TemplateBinding Background}"
                        Padding="{TemplateBinding Padding}"
                        SnapsToDevicePixels="true">
                        <ContentPresenter HorizontalAlignment="Left"
                                    VerticalAlignment=
                                    "{TemplateBinding VerticalContentAlignment}"
                                    SnapsToDevicePixels=
                                    "{TemplateBinding SnapsToDevicePixels}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="true">
                            <Setter TargetName="Bd" Property="Background" 
                         Value="{StaticResource SecondaryColorBrush}"/>
                            <Setter Property="Foreground" Value="White"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="true"/>
                                <Condition Property="Selector.IsSelectionActive" Value="false"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="Bd" 
                         Value="{StaticResource SecondaryColorBrush}"/>
                            <Setter Property="Foreground" Value="White"/>
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" 
                         Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Cursor" Value="Hand"/>
                            <Setter Property="Background" Value="{StaticResource HoveringOverColorBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Window Content To Views Definitions for Navigation ContentControl Style-->
    <DataTemplate x:Key="PersonalInfoViewTemplate">
        <views:PersonalInfoView/>
    </DataTemplate>
    <DataTemplate x:Key="SkillsEditViewTemplate">
        <views:SkillsView/>
    </DataTemplate>
    <DataTemplate x:Key="EmploymentEditViewTemplate">
        <views:ExperienceView/>
    </DataTemplate>
    <DataTemplate x:Key="EducationEditViewTemplate">
        <views:EducationView/>
    </DataTemplate>
    <DataTemplate x:Key="ContactsEditViewTemplate">
        <views:ContactsView/>
    </DataTemplate>
    <DataTemplate x:Key="AffiliationsEditViewTemplate">
        <views:AffiliationsView/>
    </DataTemplate>
    <DataTemplate x:Key="LanguagesEditViewTemplate">
        <views:LanguagesView/>
    </DataTemplate>
    <DataTemplate x:Key="SettingViewTemplate">
        <views:SettingView/>
    </DataTemplate>
    <DataTemplate x:Key="UserViewTemplate">
        <views:UserView/>
    </DataTemplate>

    <!--Main Window ContentControl Style-->
    <Style x:Key="NavigationContentStyle" TargetType="ContentControl">
        <Setter Property="ContentTemplate" Value="{StaticResource PersonalInfoViewTemplate}"/>
        <Setter Property="Visibility" Value="Visible"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding ElementName=NavigationMenuListBox, Path=SelectedItem}"
                     Value="PersonalInfo">
                <Setter Property="ContentTemplate" Value="{StaticResource PersonalInfoViewTemplate}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding ElementName=NavigationMenuListBox, Path=SelectedItem}"
                     Value="Skills">
                <Setter Property="ContentTemplate" Value="{StaticResource SkillsEditViewTemplate}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding ElementName=NavigationMenuListBox, Path=SelectedItem}" 
                     Value="Experience">
                <Setter Property="ContentTemplate" Value="{StaticResource EmploymentEditViewTemplate}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding ElementName=NavigationMenuListBox, Path=SelectedItem}" 
                     Value="Education">
                <Setter Property="ContentTemplate" Value="{StaticResource EducationEditViewTemplate}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding ElementName=NavigationMenuListBox, Path=SelectedItem}" 
                     Value="Contacts">
                <Setter Property="ContentTemplate" Value="{StaticResource ContactsEditViewTemplate}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding ElementName=NavigationMenuListBox, Path=SelectedItem}" 
                     Value="Affiliations">
                <Setter Property="ContentTemplate" Value="{StaticResource AffiliationsEditViewTemplate}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding ElementName=NavigationMenuListBox, Path=SelectedItem}" 
                     Value="Languages">
                <Setter Property="ContentTemplate" Value="{StaticResource LanguagesEditViewTemplate}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding ElementName=SettingToggleButton, Path=IsChecked}"
                         Value="True">
                <Setter Property="ContentTemplate" Value="{StaticResource SettingViewTemplate}"/>
            </DataTrigger>
            <!--<DataTrigger Binding="{Binding ElementName=UserToggleButton, Path=IsChecked}"
                         Value="True">
                <Setter Property="ContentTemplate" Value="{StaticResource UserViewTemplate}"/>
            </DataTrigger>-->
        </Style.Triggers>
    </Style>

    <!--Build CV Button Style-->
    <Style x:Key="MainButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{StaticResource SecondaryColorBrush}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border CornerRadius="10" Background="{TemplateBinding Background}" BorderBrush="{StaticResource SecondaryColorBrush}"
                            BorderThickness="1">
                        <ContentPresenter HorizontalAlignment="Left" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource HoveringOverColorBrush}"/>
                <Setter Property="Cursor" Value="Hand"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{StaticResource SecondaryColorBrush}"/>
                <Setter Property="Foreground" Value="White"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--Control ToggleButton (Upper Right Corner)-->
    <Style x:Key="ControlToggleButtonStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{StaticResource SecondaryColorBrush}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Background="{TemplateBinding Background}" CornerRadius="10">
                        <ContentPresenter HorizontalAlignment="Left" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource HoveringOverColorBrush}"/>
                <Setter Property="Cursor" Value="Hand"/>
            </Trigger>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Background" Value="{StaticResource SecondaryColorBrush}"/>
                <Setter Property="Foreground" Value="White"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--Control Button (Upper Right Corner) Style-->
    <Style x:Key="ControlButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{StaticResource SecondaryColorBrush}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}" CornerRadius="10">
                        <ContentPresenter HorizontalAlignment="Left" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource HoveringOverColorBrush}"/>
                <Setter Property="Cursor" Value="Hand"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--                 -->
    <!--SkillsView Styles-->
    <!--                 -->

    <!--Skillsets ListBox Style-->
    <Style x:Key="SkillsetItemContainerStyle" TargetType="{x:Type ListBoxItem}">
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" 
                            Background="{TemplateBinding Background}" Padding="0" SnapsToDevicePixels="true" 
                            CornerRadius="10">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Main Skills elements style-->
    <Style x:Key="MainSkillElementsStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{StaticResource PrimaryTextColor}"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Background="{TemplateBinding Background}" BorderBrush="{StaticResource SecondaryColorBrush}"
                            BorderThickness="1" CornerRadius="10">
                        <ContentPresenter HorizontalAlignment="Left" VerticalAlignment="Center" Margin="13,8"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource HoveringOverColorBrush}"/>
                <Setter Property="Cursor" Value="Hand"/>
            </Trigger>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Background" Value="{StaticResource SecondaryColorBrush}"/>
                <Setter Property="Foreground" Value="White"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--Skills ListBox Style-->
    <Style x:Key="SkillItemContainerStyle" TargetType="{x:Type ListBoxItem}">
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" 
                            Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Add Skill button style-->
    <Style x:Key="AddSkillButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{StaticResource PrimaryTextColor}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border CornerRadius="10" Background="{TemplateBinding Background}" BorderBrush="{StaticResource SecondaryColorBrush}"
                            BorderThickness="1">
                        <ContentPresenter HorizontalAlignment="Left" VerticalAlignment="Center" Margin="13,8"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource HoveringOverColorBrush}"/>
                <Setter Property="Cursor" Value="Hand"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{StaticResource SecondaryColorBrush}"/>
                <Setter Property="Foreground" Value="White"/>
            </Trigger>
        </Style.Triggers>
    </Style>

</ResourceDictionary>